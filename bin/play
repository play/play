#!/usr/bin/env ruby
# encoding: UTF-8

$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])

require 'play'

# Auto-migrate before launching the servers.
#
# Returns nothing.
def migrate
  puts "Migrating your database"
  version = `ls db/migrate | wc -l`.to_i
  ActiveRecord::Base.establish_connection(Play.config['db'])
  ActiveRecord::Migrator.migrate("#{File.dirname(__FILE__)}/../db/migrate/", version)
end

# Starts up the web interface.
#
# Returns nothing.
def start_web
  pid = fork { Play::Library.monitor }
  Process.detach(pid)

  puts "play is running on http://localhost:5050"
  system("unicorn -c #{File.dirname(__FILE__)}/../config/unicorn.rb")
end

# Starts up the music server.
#
# Returns nothing.
def start_music
  pid = fork { Play.client.loop }
  Process.detach(pid)
end

# Forks and kicks off music indexing.
#
# Returns nothing.
def index_music
  pid = fork { Play::Library.import_songs }
  Process.detach(pid)
end

# Fetches all the album art in the world.
#
# Returns nothing.
def fetch_art
  Play::Album.fetch_art!
end

case ARGV[0]
when 'start'
  start_music
  start_web
  index_music
when 'stop'
  Play.client.stop
when 'music'
  migrate
  start_music
  index_music
when 'web'
  migrate
  start_web
when 'pause'
  Play.client.pause
when 'index'
  migrate
  index_music
when 'fetch-art'
  fetch_art
when 'migrate'
  migrate
else
  puts "play â–º"
  puts ""
  puts "USAGE:    play [command]"
  puts "COMMANDS: "
  puts "          start   - Starts the web and music servers."
  puts "          stop    - Stops the music server."
  puts "          music   - Starts the music server."
  puts "          web     - Starts the web server."
  puts "          pause   - Pauses the music server."
  puts "          migrate - Forces a migration of the database."
  puts "          index   - Forces a reindex of the music library."
end
