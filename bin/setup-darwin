#!/bin/bash
#
# setup
#
# Sets your system up for some killer tunes, bro.

set -e

echo ""
echo "  play ►"
echo "  a nifty server for your musics."
echo ""

# Check for Bundler
if test ! $(which bundle)
then
  echo "  x You need to install Bundler:"
  echo "    gem install bundler"
  exit
else
  echo "  + Bundler found."
fi

# Install gems
echo "  + Bootstrapping your Rubies."
bundle install --quiet

echo ""

# Decide on a client
if test $(which afplay) && test $(which say)
then
  echo "  + afplay and say found."
  client='afplay'
else
  echo "  x You need to install mpg123 + festival or afplay + say"
  exit
fi

# Check for MySQL
if test ! $(which mysql)
then
  echo "  x You need to install MySQL."
  exit
else
  echo "  + MySQL found."
fi

# Music setup
echo ""
echo "  + What is the absolute path to your music? › \c"
read path
path=${path//\//\\/}

# GitHub setup
echo ""
echo "  + You need to register your play instance on GitHub. "
echo ""
echo "    Unless you're putting play on a different hostname, you likely will"
echo "    want to use the following values:"
echo ""
echo "       Main URL:     http://localhost:5050"
echo "       Callback URL: http://localhost:5050/auth/github/callback"
echo ""
echo "    Once you've registered a new application, you'll need to grab the"
echo "    *client ID* and the *client secret*."
echo ""
echo "    Press \"return\" to open a browser window and enter your OAuth details."
read
open "https://github.com/account/applications/new"

echo "  + What's your GitHub client ID?     › \c"
read client_id
echo "  + What's your GitHub client secret? › \c"
read client_secret

echo ""
echo "  + We hit the Last.fm API for beautiful gorgeous album art. If you have"
echo "    an API key, well, what is it?     › \c"
read lastfm_key

echo ""

# MySQL setup
echo "  + What's the username for the MySQL database user? › \c"
read user
echo "  + What's the password for the MySQL database user? › \c"
stty -echo
read password
stty echo
echo ""

echo "  + Configuration settings saved to config/play.yml."
echo "    Feel free to manually update the file anytime you'd like."

echo ""

# Set up play.yml
if test -f config/play.yml
then
  echo "  + Backing up your existing play.yml configuration."
  rm -f config/play.backup.yml
  mv config/play.yml config/play.backup.yml
fi
cat config/play.example.yml | sed \
  -e "s/__PATH__/$path/" \
  -e "s/__OAUTH_KEY__/$client_id/" \
  -e "s/__OAUTH_SECRET__/$client_secret/" \
  -e "s/__USER__/$user/" \
  -e "s/__PASSWORD__/$password/" \
  -e "s/__CLIENT__/$client/" \
  -e "s/__LASTFM_KEY__/$lastfm_key/" \
  > config/play.yml

mysql --user="$user" \
      --password="$password" \
      --execute='CREATE DATABASE IF NOT EXISTS play CHARACTER SET utf8 COLLATE utf8_unicode_ci;'

echo "  + You now have a database named \"play\"."

echo ""
echo "  + Migrating your database."
bin/play migrate 2>&1 > /dev/null

echo ""

echo "  Good work. We're ready to rock."
echo "  Run 'bin/play start' to start playing."
